@using BLBEnum=MyHebrewBible.Client.Enums.BLB

@using MyHebrewBible.Client.Helpers

@if (ModalIsNotShownToggle)
{
	<button type="button" class="btn @ButtonSize @IconColor"
			@onclick="() => ShowModal()">
		<span class="fs-5 badge bg-info-subtle text-black">@QuotedVerse!.Title <i class="@Icon"></i></span>
	</button>
}
else
{
	<div class="@modalClass" style="display:@(modalOpen?"block":"none");">
		<div class="modal-dialog modal-md">
			<div class="modal-content">
				<div class="modal-header bg-warning">
					<h4 class="modal-title">@QuotedVerse!.Title</h4>
					<button type="button" class="close" @onclick="CloseModal">
						<span>&times;</span>
					</button>
				</div>
				<div class="modal-body bg-warning-subtle">
					<i class="fa fa-quote-left fa-2x"></i>&nbsp;@VerseBody
				</div>
				<div class="modal-footer bg-light">
					@BLBEnum.KJV.AnchorBCV(QuotedVerse.VerseRange)
				</div>
			</div>
		</div>
	</div>
}

@code {
	[Parameter, EditorRequired] public Enums.QuotedVerse? QuotedVerse { get; set; }
	[Parameter, EditorRequired] public RenderFragment? VerseBody { get; set; }
	[Parameter] public string? Icon { get; set; } = "far fa-window-restore"; 
	[Parameter] public string? IconColor { get; set; } = TextColors.Dark;  
	[Parameter] public string? ButtonSize { get; set; } = BtnSize.Lg;     

	bool modalOpen = false;
	string modalClass = "modal";
	bool ModalIsNotShownToggle = true;

	void ShowModal()
	{
		modalOpen = true;
		ModalIsNotShownToggle = false;
		modalClass += " show";
		StateHasChanged();
	}

	void CloseModal()
	{
		modalOpen = false;
		ModalIsNotShownToggle = true;
		modalClass = "modal";
	}
}
