@using MyHebrewBible.Client.Enums

@if (ShowCloseButton)
{
	<div class="card p-1 border-primary">
		<div class="card-header">
			<h5>
				Chapters
				<button type="button" class="mt-1 btn btn-danger btn-sm" @onclick="ButtonCloseClick">
					<i class="fas fa-times"></i>
				</button>
			</h5>
		</div>
		<div class="card-body">
			@foreach (var r in ButtonRows)
			{
				<div class="btn-group btn-group-sm">
					@for (int i = r.ChapterStart; i <= r.ChapterEnd; i++)
					{
						int iLocal = i;
						<button type="button" class="btn btn-outline-info font-monospace"
										@onclick="@(e => ButtonClick(@iLocal))">
							@((MarkupString)ButtonNumber(i))
						</button>
					}
				</div>
			}
		</div>
	</div>
}

@code {

	[Parameter, EditorRequired] public BibleBook? CurrentBibleBook { get; set; }
	[Parameter, EditorRequired] public int ButtonsPerRow { get; set; }
	[Parameter] public EventCallback<BookChapterVerseVM> OnChapterFilterSelected { get; set; }

	private bool ShowCloseButton;

	public List<ButtonRowChapter> ButtonRows { get; set; } = new List<ButtonRowChapter>();

	protected override void OnParametersSet()
	{
		ButtonRows.Clear();
		PopulateButtonRows();
	}

	private void ButtonCloseClick()
	{
		ButtonRows.Clear();
		ShowCloseButton = false;
	}

	private void PopulateButtonRows()
	{
		ShowCloseButton = true;
		if (ButtonsPerRow >= CurrentBibleBook!.LastChapter)
		{
			// Add only one row
			ButtonRows.Add(new ButtonRowChapter()
				{
					ChapterStart = 1,
					ChapterEnd = CurrentBibleBook!.LastChapter
				});
		}
		else
		{
			// Multiple Rows
			int wholeRowCount = CurrentBibleBook!.LastChapter / ButtonsPerRow;
			int lastRowButtonCount = CurrentBibleBook!.LastChapter % ButtonsPerRow;
			int s = 1;
			int e = ButtonsPerRow;
			for (int r = 1; r <= wholeRowCount; r++)
			{

				ButtonRows.Add(new ButtonRowChapter()
					{
						ChapterStart = s,
						ChapterEnd = e
					});
				s = e + 1;
				e += ButtonsPerRow;
			}

			if (lastRowButtonCount > 0)
			{
				ButtonRows.Add(new ButtonRowChapter()
					{
						ChapterStart = (CurrentBibleBook!.LastChapter - lastRowButtonCount) + 1, 
						ChapterEnd = CurrentBibleBook!.LastChapter
					});

			}
		}
	}

	private void ButtonClick(int chapter)
	{
		//ButtonRows.Clear();
		ShowCloseButton = false;
		OnChapterFilterSelected.InvokeAsync(new BookChapterVerseVM(CurrentBibleBook, chapter, Verse:0));
	}

	protected MarkupString ButtonNumber(int i)
	{

		if (CurrentBibleBook!.LastChapter > 99)
		{
			if (i < 10)
			{
				return new MarkupString($"&nbsp;&nbsp;{i}");  
			}
			else
			{
				if (i < 100)
				{
					return new MarkupString($"&nbsp;{i}");
				}
				else
				{
					return new MarkupString($"{i}");
				}
			}

		}
		else
		{
			if (i < 10)
			{
				return new MarkupString($"&nbsp;{i}");  // return new MarkupString($"&nbsp;{i}");
			}
			else
			{
				return new MarkupString($"{i}");
			}
		}

	}

}


