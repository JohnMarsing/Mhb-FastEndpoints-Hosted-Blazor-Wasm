@typeparam TItem

@if (Items == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<table class="@HeaderCSS">
		<thead class="@TheadCSS">
			<tr>@TableHeader</tr>
		</thead>
		<tbody>
			@foreach (var item in Items)
			{
				<tr class="@(RowClassSelector != null ? RowClassSelector(item) : TRCSS)">
					@RowTemplate!(item)
				</tr>
			}
		</tbody>
		<tfoot>
			<tr class="@TableFooterColor">@TableFooter</tr>
		</tfoot>
	</table>
}

@code	{
	[Parameter] public RenderFragment? TableHeader { get; set; }
	[Parameter] public RenderFragment<TItem>? RowTemplate { get; set; }
	[Parameter] public IReadOnlyList<TItem>? Items { get; set; }
	[Parameter] public string HeaderCSS { get; set; } = "table ";
	[Parameter] public string TheadCSS { get; set; } = ""; 
	[Parameter] public string TRCSS { get; set; } = ""; 
	[Parameter] public Func<TItem, string>? RowClassSelector { get; set; } // allow per-row CSS class logic.
	[Parameter] public RenderFragment? TableFooter { get; set; }
	[Parameter] public string TableFooterColor { get; set; } = "";
}