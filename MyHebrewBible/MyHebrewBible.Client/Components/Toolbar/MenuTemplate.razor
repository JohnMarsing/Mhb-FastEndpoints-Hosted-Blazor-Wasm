@typeparam TItem where TItem : Dictionary<int, string> 
@using MyHebrewBible.Client.Helpers

@if (Items != null)
{
	<div class="btn-group-vertical @BtnGroupSize.Md dropstart" role="group" aria-label="Vertical button group">

		<button type="button" class="btn @BtnColors.Primary @BtnSize.Md dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
			<i class="fas fa-cogs"></i>
		</button>

		<ul class="dropdown-menu">

			@if (!string.IsNullOrEmpty(Header)) { <li class="fs-5 fw-bold dropdown-header">@Header</li> }	

			@foreach (var item in Items)
			{
				<li class="dropdown-item">
					<button class="btn btn-outline-primary"
									@onclick="() => OnItemSelected.InvokeAsync(item.Keys.FirstOrDefault())"
									type="button">
						@item.Values.FirstOrDefault()
					</button>
				</li>
			}
		</ul>
	</div>
}
else { 	<p><em>Loading...</em></p> }

@code {
	[Parameter, EditorRequired] public IEnumerable<TItem> Items { get; set; } = default!;
	[Parameter, EditorRequired] public EventCallback<int> OnItemSelected { get; set; }
	[Parameter] public string? Header { get; set; }
}