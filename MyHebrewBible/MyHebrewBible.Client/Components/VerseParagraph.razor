@using MyHebrewBible.Client.Enums

@inject ApiClient Api
@inject ILogger<VerseParagraph>? Logger
@inject IToastService? Toast

<h3>@VerseParagraphRange!.BCV</h3>

<LoadingComponent IsLoading="verses == null" TurnSpinnerOff="TurnSpinnerOff">
	@foreach (var item in verses!)
	{
		<p class="fs-5">
			<a title="@item.BCV [@item.ID]" @onclick="@(e => ButtonClick(item.ID, item.Verse))">
				<sup class="btn btn-outline-primary py-0 px-1">
					<b>@item.Verse</b>
				</sup>
			</a>
			@if (item.VerseOffset != "NULL")
			{
				<sup class="text-black-50">&nbsp;@item.VerseOffset&nbsp;</sup>
			}
			else
			{
				<text>&nbsp;</text>
			}
			@((MarkupString)@item.KJV!)
		</p>

	}
</LoadingComponent>

@code {
	[Parameter, EditorRequired] public VerseParagraphRange? VerseParagraphRange { get; set; }
	[Parameter] public EventCallback<VerseSelected> OnVerseSelected { get; set; }

	private ICollection<BibleVerse>? verses = null;
	protected bool TurnSpinnerOff = false;

	protected override async Task OnParametersSetAsync()
	{
		//Logger!.LogInformation("{Method}", nameof(OnParametersSetAsync));
		try
		{
			//await Task.Delay(200);  // ToDo: comment this out in production
			if (VerseParagraphRange!.BegId > VerseParagraphRange.EndId) 
				throw new System.ApplicationException($"BegId [{VerseParagraphRange!.BegId}] >= EndId [{VerseParagraphRange!.EndId}]");
			if (VerseParagraphRange!.EndId - VerseParagraphRange!.BegId > 300) throw new System.ApplicationException("Verse range can not exceed 300"); // ToDo: extract this
			verses = await Api!.GetVerseListBetweenIdsAsync(VerseParagraphRange.BegId, VerseParagraphRange.EndId);
		}
		catch (Exception ex)
		{
			Logger!.LogError(ex, "{Class}!{Method}", nameof(VerseParagraph), nameof(OnParametersSetAsync));
			Toast!.ShowError($"{Global.ToastShowError} {nameof(VerseParagraph)}!{nameof(OnParametersSetAsync)}");
		}
		finally
		{
			TurnSpinnerOff = true;
		}
	}

	private void ButtonClick(long scriptureId, long verse)
	{
		OnVerseSelected.InvokeAsync(new VerseSelected(scriptureId, verse));
	}

}
