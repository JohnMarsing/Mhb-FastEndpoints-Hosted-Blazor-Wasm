@page "/alephtav"
@page "/alephtavs"

@using MyHebrewBible.Client.Enums
@using Page = MyHebrewBible.Client.Enums.Nav
@using MyHebrewBible.Client.Features.AlephTav.Toolbar

@* @inject IToastService? Toast *@

<PageTitle>@Page.AlephTavs.Title</PageTitle>

<NavbarAlephTavList CurrentAlephTavSummary="CurrentAlephTavSummary"
										ShowIntroToggle="ShowIntro"
										OnAlephTavSummarySelected="ReturnedAlephTavSummary"
										OnShowIntroSelected="ReturnedShowIntro" />

@if (@CurrentAlephTavSummary is not null)
{
	<div class="mt-5">
		<br />

		<ChapterList AlephTavSummary="CurrentAlephTavSummary"
								 OnChapterSelected="ReturnedChapter" />

		@if (@VM is not null)
		{
			<LoadingProgress>
				<VerseList VM="VM" />
			</LoadingProgress>
		}
	</div>
}
else
{
	<div class="mt-5">
		<br />
		<div class="@GlobalEnums.MediaQuery.Xs.DivClass">
			<Introduction IsXs=true />
		</div>

		<div class="@GlobalEnums.MediaQuery.SmOrMdOrLgOrXl.DivClass">
			<Introduction IsXs=false />
		</div>
	</div>
}

@code {

	public Enums.AlephTavSummary? CurrentAlephTavSummary { get; set; }

	private void ReturnedAlephTavSummary(Enums.AlephTavSummary alephTavSummary)
	{
		//Toast!.ShowWarning($"AlephTavSummary Selected {alephTavSummary.BibleBook.Title}");
		ShowIntro = true;
		CurrentAlephTavSummary = alephTavSummary!;
	}

	protected VerseListVM? VM;
	private void ReturnedChapter(int chapter)
	{
		//Toast!.ShowSuccess($"{nameof(Index)}!{nameof(ReturnedChapter)}; chapter: {chapter}");
		VM = new VerseListVM(CurrentAlephTavSummary!, chapter);
	}


	protected bool ShowIntro = false;
	private void ReturnedShowIntro(bool toggle)
	{
		ShowIntro = toggle;
		CurrentAlephTavSummary = null;
	}

}
