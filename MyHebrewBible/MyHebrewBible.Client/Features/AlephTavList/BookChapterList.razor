@using MyHebrewBible.Client.Enums

<div class="card border-success my-2">
	<div class="card-header text-center">
		Standalone Aleph Tav's <span class="text-danger hebrew">את</span> by book
	</div>

	<div class="card-body p-2">
		To see the Standalone Aleph Tav's click either the <b>book</b> or the <b>chapter</b> number.
	</div>

</div>

<div class="row">
	<div class="@col1">
		
		<div class="card text-bg-secondary">
			 <div class="card-body p-1">
				<h6 class="card-title text-center">All chapters</h6>
			</div>
		</div>

	</div>
	<div class="@col2">

		<div class="card text-bg-secondary">
			<div class="card-body p-1">
				<h6 class="card-title">Individual chapters</h6>
			</div>
		</div>

	</div>
</div>
<div class="row">

	@foreach (var item in Enums.AlephTavSummary.List.OrderBy(o => o.Value).ToList())
	{
		<div class="@col1 text-center">

			<a class="font-monospace" title="@item.BibleBook.Title "
				 @onclick="@(e => ButtonClick(item.BibleBook.Value, 0))">
				@if (MediaQuery == MediaQuery.XsOrSm)
				{
					@item.BibleBook.Abrv 
				}
				else
				{
					@item.BibleBook.Title
				}
			</a>
		</div>

		<div class="@col2">
			<ul class="list-inline">
				@foreach (var chapter in item.Chapters!)
				{
					<li class="list-inline-item">

						<a class="font-monospace" title="@item.BibleBook.Abrv @item.BibleBook.Value:@chapter"
							 @onclick="@(e => ButtonClick(item.BibleBook.Value, chapter))">
							@chapter
						</a>
					</li>
				}
			</ul>
		</div>
	}

</div>

@code {
	[Parameter, EditorRequired] public MediaQuery? MediaQuery { get; set; }
	[Parameter] public EventCallback<BookAndChapter> OnBookAndChapterSelected { get; set; }

	string col1 => MediaQuery == MediaQuery.XsOrSm ? "col-3" : "col-2";
	string col2 => MediaQuery == MediaQuery.XsOrSm ? "col-9" : "col-10";

	private void ButtonClick(int bookId, int chapter)
	{
		BookAndChapter? bookAndChapter = new BookAndChapter(GlobalEnums.BibleBook.FromValue(bookId), chapter);
		OnBookAndChapterSelected.InvokeAsync(bookAndChapter);
	}

}
