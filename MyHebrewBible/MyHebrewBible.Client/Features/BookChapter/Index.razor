@page "/bookchapter"
@using MyHebrewBible.Client.Enums
@using MyHebrewBible.Client.Helpers
@using MyHebrewBible.Client.Features.BookChapter.Search
@using MyHebrewBible.Client.Features.BookChapter.PrevNext
@using MyHebrewBible.Client.Features.BookChapter.Verses

@* @inject ApiClient Api *@

<PageTitle>Book Chapter</PageTitle>

<div class="@MediaQuery.Xs.DivClass">

	<Typeahead BookAndChapterTypeahead="@CurrentBookAndChapter"
						 MediaQuery="@MediaQuery.Xs"
						 OnBookAndChapterSelected="@ReturnedBookAndChapter" />
</div>
<div class="@MediaQuery.Sm.DivClass">
	<Typeahead BookAndChapterTypeahead="@CurrentBookAndChapter"
						 MediaQuery="@MediaQuery.Sm"
						 OnBookAndChapterSelected="@ReturnedBookAndChapter" />
</div>
<div class="@MediaQuery.Md.DivClass">
	<Typeahead BookAndChapterTypeahead="@CurrentBookAndChapter"
						 MediaQuery="@MediaQuery.Md"
						 OnBookAndChapterSelected="@ReturnedBookAndChapter" />
</div>
<div class="@MediaQuery.Lg.DivClass">
	<Typeahead BookAndChapterTypeahead="@CurrentBookAndChapter"
						 MediaQuery="@MediaQuery.Lg"
						 OnBookAndChapterSelected="@ReturnedBookAndChapter" />
</div>
<div class="@MediaQuery.Xl.DivClass">
	<Typeahead BookAndChapterTypeahead="@CurrentBookAndChapter"
						 MediaQuery="@MediaQuery.Xl"
						 OnBookAndChapterSelected="@ReturnedBookAndChapter" />
</div>


@* <p class="my-0">@($"ReturnedBookAndChapterString: {ReturnedBookAndChapterString}")</p> *@

@if (CurrentBookAndChapter is not null)
{
	<div class="pb-n1 mt-2 mb-2 border-bottom border-info">
		<div class="d-flex justify-content-between mb-3">
			<div class="ps-2">
				<PreviousButton PreviousBookAndChapter="@CurrentBookAndChapter"
												buttonToShow="ButtonsToShow.PreviousOnly"
												OnBookAndChapterSelected="@ReturnedBookAndChapter" />
			</div>

			<span class="text-center">@CurrentBookAndChapter.BibleBook!.Title @CurrentBookAndChapter.Chapter </span>

			<div class="pe-2">
				<NextButton NextBookAndChapter="@CurrentBookAndChapter"
										buttonToShow="ButtonsToShow.NextOnly"
										OnBookAndChapterSelected="@ReturnedBookAndChapter" />
			</div>
		</div>

	</div>
}

<Sections BookAndChapter="CurrentBookAndChapter" />

@code {
	public BookAndChapter? CurrentBookAndChapter { get; set; }

	protected override void OnInitialized()
	{
		CurrentBookAndChapter = SetBibleBookAndChapter();
	}

	protected BookAndChapter? SetBibleBookAndChapter()
	{
		//ToDo: finish LocalStorage solution

		bool GottenFromLocalStorage = false;
		if (GottenFromLocalStorage)
		{
			return new BookAndChapter(BibleBook.Genesis, 1);
		}
		else
		{
			return new BookAndChapter(BibleBook.Exodus, 2);
			//return BookAndChapter(BibleBook.Exodus, BibleBook.Exodus.LastChapter)
		}
	}

	protected string? ReturnedBookAndChapterString;

	private void ReturnedBookAndChapter(BookAndChapter bookAndChapter)
	{
		ReturnedBookAndChapterString = bookAndChapter.ToString();
		CurrentBookAndChapter = bookAndChapter!;
	}

}
