@page "/bookchapter"
@using MyHebrewBible.Client.Components.BookChapterToolbar
@using MyHebrewBible.Client.Enums

@inject ApiClient Api

<PageTitle>Book Chapter</PageTitle>

<div class="pb-n1 mt-2 mb-2 border-bottom border-info">

	<div class="d-flex justify-content-between mb-3">
		<div class="ps-2">
			@if (CurrentPrevNextButtonVM is not null)
			{
				<PrevNextButton PrevNextButtonVM="@CurrentPrevNextButtonVM"
												buttonToShow="ButtonsToShow.PreviousOnly"
												OnBookChapterSelected="@ReturnedBookChapterPrevNext" />
			}
		</div>
		<div class="fs-4">
			<p class="text-center mt-4 fs-3"><span class="badge bg-primary-subtle text-dark">@SubTitle</span></p>
		</div>
		<div class="pe-2">
			@if (CurrentPrevNextButtonVM is not null)
			{
				<PrevNextButton PrevNextButtonVM="@CurrentPrevNextButtonVM"
												buttonToShow="ButtonsToShow.NextOnly"
												OnBookChapterSelected="@ReturnedBookChapterPrevNext" />
			}

		</div>
	</div>


	@* <h5 class="text-center">Book Chapter</h5> *@

</div>



@if (verses == null)
{
	<p><em>Loading verses...</em></p>
}
else
{
	@foreach (var item in verses)
	{
@* 		
		@if (item.DescH.GetType() != typeof(DBNull))
		{
			<h3 class="mt-2">@item.DescH</h3>
		}
		else
		{
			<small>why for how come you know have a pin</small>
		} *@

		@* 		
		@if (item.DescH != null)
		{
			<h3 class="mt-2">@item.DescH</h3>
		} 
		*@

		@* 		@if (item.DescD is not null)
		{
			<h5 class="text-end mt-3 mb-1 text-black-50 fst-italic">@item.DescD</h5>
		}
*@

		<p class="fs-5">
			<a title="@item.BCV" href="https://www.blueletterbible.org/kjv/gen/1/1/" target="_blank"><sup class="btn btn-outline-primary py-0 px-1"><b>@item.Verse</b></sup></a>  @((MarkupString)@item.KJV!)
		</p>

	}
}

@code {

	private Enums.BibleBook bibleBook = BibleBook.Genesis;
	private int chapter = 1;

	private ICollection<BookChapter>? verses = null;
	public PrevNextButtonVM? CurrentPrevNextButtonVM { get; set; }

	protected string SubTitle = "";

	protected override async Task OnInitializedAsync()
	{
		CurrentPrevNextButtonVM = new PrevNextButtonVM(BibleBook.Genesis, 1);
		SubTitle = $"{BibleBook.Genesis.Title}-1";
		verses = await Api!.GetBookChapterAsync(BibleBook.Genesis, 1);
	}

	private async Task ReturnedBookChapterPrevNext(BookChapterPrevNext bookChapterPrevNext)
	{
		CurrentPrevNextButtonVM = new PrevNextButtonVM(bookChapterPrevNext.BibleBook!, bookChapterPrevNext.Chapter);

		// Why in the HELL does this not work!!!
		//verses = await Api!.GetBookChapterAsync(bookChapterPrevNext.BibleBook!.Value, chapter);
		string t = bookChapterPrevNext.BibleBook!.Title;
		int b = bookChapterPrevNext.BibleBook!.Value;
		int c = bookChapterPrevNext.Chapter;
		SubTitle = $"{t} {c}";
		verses = await Api!.GetBookChapterAsync(b, c);
		//StateHasChanged();
	}

}
