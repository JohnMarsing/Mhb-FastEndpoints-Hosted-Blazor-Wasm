@page "/bookchapter"

@using MyHebrewBible.Client.State
@using MyHebrewBible.Client.Layout

@using MyHebrewBible.Client.Components.BibleLookup.Toolbar;
@using MyHebrewBible.Client.Features.BookChapter.Verses

@inject IBookChapterState? bookChapterState

<PageTitle>@PageTitle</PageTitle>

<div class="@GlobalEnums.MediaQuery.Xs.DivClass">
	<NavbarBookChapter CurrentBookAndChapter="CurrentBookAndChapter"
					OnBookAndChapterSelected="ReturnedBookAndChapter" 
					MediaQuery="GlobalEnums.MediaQuery.Xs" />
</div>
<div class="@GlobalEnums.MediaQuery.Sm.DivClass">
	<NavbarBookChapter CurrentBookAndChapter="CurrentBookAndChapter"
					OnBookAndChapterSelected="ReturnedBookAndChapter"
					MediaQuery="GlobalEnums.MediaQuery.Sm" />
</div>
<div class="@GlobalEnums.MediaQuery.Md.DivClass">
	<NavbarBookChapter CurrentBookAndChapter="CurrentBookAndChapter"
					OnBookAndChapterSelected="ReturnedBookAndChapter"
					MediaQuery="GlobalEnums.MediaQuery.Md" />
</div>
<div class="@GlobalEnums.MediaQuery.Lg.DivClass">
	<NavbarBookChapter CurrentBookAndChapter="CurrentBookAndChapter"
					OnBookAndChapterSelected="ReturnedBookAndChapter"
					MediaQuery="GlobalEnums.MediaQuery.Lg" />
</div>
<div class="@GlobalEnums.MediaQuery.Xl.DivClass">
	<NavbarBookChapter CurrentBookAndChapter="CurrentBookAndChapter"
					OnBookAndChapterSelected="ReturnedBookAndChapter"
					MediaQuery="GlobalEnums.MediaQuery.Xl" />
</div>

<div class="mt-5">
	<br />
	<Sections BookAndChapter="CurrentBookAndChapter" />
</div>

@code {
	public BookAndChapter? CurrentBookAndChapter { get; set; }

	protected string PageTitle => GlobalEnums.BibleBookFormat.BC(CurrentBookAndChapter, useAbrv: false);

	protected override void OnInitialized()
	{
		BibleBookIdAndChapter bibleBookIdAndChapter = bookChapterState!.Get();
		CurrentBookAndChapter = new BookAndChapter(GlobalEnums.BibleBook.FromValue(bibleBookIdAndChapter.BibleBookId), bibleBookIdAndChapter.Chapter);
	}

	private void ReturnedBookAndChapter(BookAndChapter bookAndChapter)
	{
		CurrentBookAndChapter = bookAndChapter!;
		bookChapterState!.Update(new State.BibleBookIdAndChapter(CurrentBookAndChapter.BibleBook!.Value, CurrentBookAndChapter.Chapter));
	}
}

