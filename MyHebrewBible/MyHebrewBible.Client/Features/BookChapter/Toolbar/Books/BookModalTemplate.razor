@if (ModalIsNotShownToggle)
{
	<button type="button" class="btn btn-info"
					@onclick="() => ShowModal()">
		@BookTitle <i class="fas fa-angle-down"></i> 	@* fas fa-chevron-right *@
	</button>
}
else
{
	<div class="@modalClass" style="display:@(modalOpen?"block":"none");">
		<div class="modal-dialog @modalSize">
			<div class="modal-content">
				<div class="modal-header @modalHeaderColor">

					@ChildHeaderContent

					<button type="button" class="close" @onclick="CloseModal">
						<span>&times;</span>
					</button>
				</div>

				<div class="modal-body @modalBodyColor">

					@ChildBodyContent

				</div>
			</div>
		</div>
	</div>
}

@code {
	[Parameter, EditorRequired] public string? BookTitle { get; set; }
	[Parameter, EditorRequired] public RenderFragment? ChildHeaderContent { get; set; }
	[Parameter, EditorRequired] public RenderFragment? ChildBodyContent { get; set; }

	bool modalOpen = false;
	string modalClass = "modal";
	string modalSize = "modal-sm";
	string modalHeaderColor = "bg-warning-subtle";
	string modalBodyColor = "";  // bg-warning-subtle
	bool ModalIsNotShownToggle = true;

	void ShowModal()
	{
		modalOpen = true;
		ModalIsNotShownToggle = false;
		modalClass += " show";
		StateHasChanged();
	}

	void CloseModal()
	{
		modalOpen = false;
		ModalIsNotShownToggle = true;
		modalClass = "modal";
	}
}
