
<div class="d-flex justify-content-center">
	<span class="text-black-50 text-center" style="font-size:11px;">100's</span>
</div>

<div class="d-flex justify-content-center">
	<button id="@GetId(0)" title="@GetId(0)" class="@GetButtonClass(0)" @onclick="() => ButtonClick(0)">0</button>
</div>

<div class="d-flex justify-content-center">
	<button id="@GetId(1)" title="@GetId(1)" class="@GetButtonClass(1)" @onclick="() => ButtonClick(1)">1</button>
</div>


@code {
	[Parameter, EditorRequired] public StepState? CurrentStepState { get; set; }
	[Parameter, EditorRequired] public EventCallback<int> OnHundredNumberSelected { get; set; }

	protected string GetButtonClass(int number)
	{
		return $"btn {Helper.GetButtonColor(0)} {Helper.GetDefaultButtonClass(small: true)}";
	}

	private void ButtonClick(int number)
	{
		//Logger!.LogInformation("{Method}, number: {number}", nameof(ButtonClick), number);
		OnHundredNumberSelected.InvokeAsync(number);
	}

	private string GetId(int number)
	{
		return $"{CurrentStepState!.Step!.PlaceShortName}-{number}";
	}

}
