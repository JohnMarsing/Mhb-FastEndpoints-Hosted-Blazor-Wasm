@using MyHebrewBible.Client.Features.BookChapter.Enums

@* @inject ILogger<NumberButton>? Logger *@

<div class="d-flex justify-content-center">
	<button id="@id"  title="@id" class="@ButtonClass" @onclick="() => ButtonClick(VM!.Number)">@VM!.Number</button>
</div>


@code {
	[Parameter, EditorRequired] public NumberButtonVM? VM { get; set; } // public record NumberButtonVM(Place PlaceEnum, int Number);
	[Parameter, EditorRequired] public string? ButtonClass { get; set; }
	[Parameter, EditorRequired] public EventCallback<NumberButtonVM> OnVMSelected { get; set; }

	string id = string.Empty;

	protected override void OnParametersSet()
	{
		id = $"{VM!.PlaceEnum.ShortName}-{VM!.Number}";



		if (VM.PlaceEnum == Place.Hundreds)
		{
			
		}

	/*
		if (VM!.PlaceEnum == Place.Ones && VM!.Number == 0)
		{
			id = Constants.SetFocusOnNumberButton;
		}
		else
		{
			id = $"{VM.PlaceEnum}-{VM.Number}";
		}
	*/
	}

	private void ButtonClick(int number)
	{
		//Logger!.LogInformation("{Method}, VM: {VM}", nameof(ButtonClick), VM);
		OnVMSelected.InvokeAsync(VM);
	}
}
