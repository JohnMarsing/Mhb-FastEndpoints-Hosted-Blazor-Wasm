 @using MyHebrewBible.Client.Helpers

<div class="@modalClass" style="display:@(modalOpen ? "block" : "none");">
	<div class="modal-dialog">
		<div class="modal-content">

			<div class="modal-header @BgAndText.DangerSubtle">
				<h4 class="modal-title">Drill down to see the Hebrew❗</h4>

				<button type="button" class="close" @onclick="ButtonClickClose">
					<span>&times;</span>
				</button>
			</div>

			<!--PageInstructionModal!ChildBodyContent  -->
			<div class="modal-body @BgAndText.Light">

				<p class="mt-3">
					<b>1<sup>st</sup></b> Click the
					<button class="btn @BtnOutlineColors.Primary @BtnSize.Xs"><i class="@Icon.Chevron.Down"></i></button>
					at the end of a verse
				</p>

				<p class="ms-3 mt-1">
					This will <span class="@BgAndText.InfoSubtle">highlight</span> the selected verse and break it down into word segments. e.g. ...
					<br /><span class="@BgAndText.InfoSubtle">In the beginning</span> <span class="@BgAndText.InfoSubtle me-2">God</span> <span class="@BgAndText.InfoSubtle me-2">...</span>
				</p>

				<p class="ms-3 mt-1">
					Depending on the <button class="btn @BtnOutlineColors.Primary">User Settings</button> you will either see a table of Hebrew words below the verse
					or the Hebrew words will be shown to the right of the verse.
				</p>

				<p class="mt-4">
					<b>2<sup>nd</sup></b>
					Click one of the word segment to see the Hebrew word.
					By clicking a word, it will change the <span class="@BgAndText.WarningSubtle">highlight</span> for both the selected English word and the correspond Hebrew word.
				</p>

				<p class="ms-3 mt-1">
					<i class="far fa-lightbulb"></i> You can go the other way as well and select the Hebrew word to see the English word segment it belongs to.
				</p>

			</div>

			<div class="modal-footer @BgAndText.DarkSubtle">
				<button @onclick="ButtonClickClose" class="btn @BtnColors.Primary @BtnSize.Md" 
					title="call CloseModal AND EventCallback OnClose" type="button">
					Close
				</button>
			</div>

 		</div>  <!-- modal-content -->
	</div> <!-- modal-dialog -->
</div> <!-- modalClass -->

@code {
	[Parameter, EditorRequired] public EventCallback OnClose { get; set; }

	private void ButtonClickClose()
	{
		// Toast!.ShowInfo("ButtonClickClose");
		CloseModal();
		OnClose.InvokeAsync();
	}

	#region Modal Code
	bool modalOpen = true;
	string modalClass = "modal show";

	void CloseModal()
	{
		modalOpen = false;
		modalClass = "modal";
	}
	#endregion
}
