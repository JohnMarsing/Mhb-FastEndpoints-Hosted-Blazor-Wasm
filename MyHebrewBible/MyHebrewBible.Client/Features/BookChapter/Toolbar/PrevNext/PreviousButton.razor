@using MyHebrewBible.Client.Enums

@if (buttonToShow == ButtonsToShow.Both | buttonToShow == ButtonsToShow.PreviousOnly)
{
	@if (Previous!.BibleBook is not null)
	{
		<button type="button" class="btn btn-outline-primary"
						@onclick="ButtonClick">
			@Text<i class="@GlobalEnums.BibleBook.NavigationIcon.Previous"></i>
		</button>
	}
	else
	{
		<OnEdgeButton />
	}
}

@code {
	[Parameter, EditorRequired] public BookAndChapter? PreviousBookAndChapter { get; set; }
	[Parameter, EditorRequired] public ButtonsToShow buttonToShow { get; set; }
	[Parameter] public EventCallback<BookAndChapter> OnBookAndChapterSelected { get; set; }

	BibleBookPrevNext? Previous; // only null when Gen 1

	//MarkupString TextOLD => IsXs ? (MarkupString)"" : (MarkupString)$"<sup>{Previous!.ButtonText}</sup> ";
	MarkupString Text =>  (MarkupString)$"<sup>{Previous!.ButtonText}</sup> ";

	protected override void OnParametersSet()
	{
		Previous = PreviousBookAndChapter!.BibleBook!.NavigationPrevious(PreviousBookAndChapter.Chapter);
	}

	private void ButtonClick()
	{
		BookAndChapter? bookAndChapter = new BookAndChapter(Previous!.BibleBook, Previous!.Chapter);
		OnBookAndChapterSelected.InvokeAsync(bookAndChapter);
	}
}