@using MyHebrewBible.Client.Features.FavoriteVerses
@using Blazored.Typeahead

<BlazoredTypeahead SearchMethod="SearchContent"
									 TValue="Enums.Verse"
									 TItem="Enums.Verse"
									 Value="SelectedVerse"
									 ValueChanged="SelectedResultChanged"
									 ValueExpression="@(() => SelectedVerse)"
									 EnableDropDown="true"
									 MinimumLength="2"
									 placeholder="Search favorite verse...">
	<SelectedTemplate Context="mycontext">
		@mycontext!.VerseNameAbrv
	</SelectedTemplate>
	<HelpTemplate>
		Please enter at least 2 characters to perform a search.
	</HelpTemplate>
	<ResultTemplate Context="mycontext">
		@mycontext.VerseName
	</ResultTemplate>
</BlazoredTypeahead>



@code {
	[Parameter, EditorRequired] public EventCallback<Enums.Verse> OnVerseSelected { get; set; }

	private Enums.Verse? SelectedVerse;

	private async Task<IEnumerable<Enums.Verse>> SearchContent(string searchText)
	{
		return await Task.FromResult(Enums.Verse.List
			.Where(x => x.VerseNameAbrv.ToLower().Contains(searchText.ToLower()))
			.OrderBy(o => o.Value));
	}

	private void SelectedResultChanged(Enums.Verse verses)
	{
		OnVerseSelected.InvokeAsync(verses);
	}
}