@page "/Haggadah"

@using MyHebrewBible.Client.Features.Haggadah.Enums
@using MyHebrewBible.Client.Features.Haggadah.Toolbar
@using Page = MyHebrewBible.Client.Enums.Nav

<PageTitle>@Page.Haggadah.Title</PageTitle>

<NavbarHaggadah Section="Section"
								OnMenuItemSelected="ReturnedMenuItem"
								OnSectionSelected="ReturnedSection" />

<LoadingProgress>
	<div class="mt-5">
		@if (CurrentContent is not null)
		{
			if (CurrentContent == Content.Introduction)
			{
				<ContentSkeleton Content=CurrentContent Language="Language">
					<EngBody><MyHebrewBible.Client.Features.Haggadah.DetailContent.Introduction /></EngBody>
					<EspBody><MyHebrewBible.Client.Features.Haggadah.DetailContentEsp.Introduction /></EspBody>
				</ContentSkeleton>
			}
			else if (CurrentContent == Content.FirstPassover)
			{
				<ContentSkeleton Content=CurrentContent Language="Language">
					<EngBody><MyHebrewBible.Client.Features.Haggadah.DetailContent.FirstPassover /></EngBody>
					<EspBody><MyHebrewBible.Client.Features.Haggadah.DetailContentEsp.FirstPassover /></EspBody>
				</ContentSkeleton>
			}
			else if (CurrentContent == Content.PassoverDeliverance)
			{
				<ContentSkeleton Content=CurrentContent Language="Language">
					<EngBody><MyHebrewBible.Client.Features.Haggadah.DetailContent.PassoverDeliverance /></EngBody>
					<EspBody><MyHebrewBible.Client.Features.Haggadah.DetailContentEsp.PassoverDeliverance /></EspBody>
				</ContentSkeleton>
			}
			else if (CurrentContent == Content.StoryOfRedemption)
			{
				<ContentSkeleton Content=CurrentContent Language="Language">
					<EngBody><MyHebrewBible.Client.Features.Haggadah.DetailContent.StoryOfRedemption /></EngBody>
					<EspBody><MyHebrewBible.Client.Features.Haggadah.DetailContentEsp.StoryOfRedemption /></EspBody>
				</ContentSkeleton>
			}
			else if (CurrentContent == Content.Matzah)
			{
				<ContentSkeleton Content=CurrentContent Language="Language">
					<EngBody><MyHebrewBible.Client.Features.Haggadah.DetailContent.Matzah /></EngBody>
					<EspBody><MyHebrewBible.Client.Features.Haggadah.DetailContentEsp.Matzah /></EspBody>
				</ContentSkeleton>
			}
			else if (CurrentContent == Content.Cup1)
			{
				<ContentSkeleton Content=CurrentContent Language="Language">
					<EngBody><MyHebrewBible.Client.Features.Haggadah.DetailContent.Cup1 /></EngBody>
					<EspBody><MyHebrewBible.Client.Features.Haggadah.DetailContentEsp.Cup1 /></EspBody>
				</ContentSkeleton>
			}
			else if (CurrentContent == Content.Cup2)
			{
				<ContentSkeleton Content=CurrentContent Language="Language">
					<EngBody><MyHebrewBible.Client.Features.Haggadah.DetailContent.Cup2 /></EngBody>
					<EspBody><MyHebrewBible.Client.Features.Haggadah.DetailContentEsp.Cup2 /></EspBody>
				</ContentSkeleton>
			}
			else if (CurrentContent == Content.Cup3)
			{
				<ContentSkeleton Content=CurrentContent Language="Language">
					<EngBody><MyHebrewBible.Client.Features.Haggadah.DetailContent.Cup3 /></EngBody>
					<EspBody><MyHebrewBible.Client.Features.Haggadah.DetailContentEsp.Cup3 /></EspBody>
				</ContentSkeleton>
			}
			else if (CurrentContent == Content.Cup4)
			{
				<ContentSkeleton Content=CurrentContent Language="Language">
					<EngBody><MyHebrewBible.Client.Features.Haggadah.DetailContent.Cup4 /></EngBody>
					<EspBody><MyHebrewBible.Client.Features.Haggadah.DetailContentEsp.Cup4 /></EspBody>
				</ContentSkeleton>
			}
			else if (CurrentContent == Content.Charoset)
			{
				<ContentSkeleton Content=CurrentContent Language="Language">
					<EngBody><MyHebrewBible.Client.Features.Haggadah.DetailContent.Charoset /></EngBody>
					<EspBody><MyHebrewBible.Client.Features.Haggadah.DetailContentEsp.Charoset /></EspBody>
				</ContentSkeleton>
			}
			else if (CurrentContent == Content.Dinner)
			{
				<ContentSkeleton Content=CurrentContent Language="Language">
					<EngBody><MyHebrewBible.Client.Features.Haggadah.DetailContent.Dinner /></EngBody>
					<EspBody><MyHebrewBible.Client.Features.Haggadah.DetailContentEsp.Dinner /></EspBody>
				</ContentSkeleton>
			}
			else if (CurrentContent == Content.Cup5)
			{
				<ContentSkeleton Content=CurrentContent Language="Language">
					<EngBody><MyHebrewBible.Client.Features.Haggadah.DetailContent.Cup5 /></EngBody>
					<EspBody><MyHebrewBible.Client.Features.Haggadah.DetailContentEsp.Cup5 /></EspBody>
				</ContentSkeleton>
			}
			else if (CurrentContent == Content.Cup6)
			{
				<ContentSkeleton Content=CurrentContent Language="Language">
					<EngBody><MyHebrewBible.Client.Features.Haggadah.DetailContent.Cup6 /></EngBody>
					<EspBody><MyHebrewBible.Client.Features.Haggadah.DetailContentEsp.Cup6 /></EspBody>
				</ContentSkeleton>
			}
			else if (CurrentContent == Content.Cup7)
			{
				<ContentSkeleton Content=CurrentContent Language="Language">
					<EngBody><MyHebrewBible.Client.Features.Haggadah.DetailContent.Cup7 /></EngBody>
					<EspBody><MyHebrewBible.Client.Features.Haggadah.DetailContentEsp.Cup7 /></EspBody>
				</ContentSkeleton>
			}
			else if (CurrentContent == Content.NextYear)
			{
				<ContentSkeleton Content=CurrentContent Language="Language">
					<EngBody></EngBody>
					<EspBody></EspBody>
				</ContentSkeleton>
			}
			else if (CurrentContent == Content.Appendix)
			{
				<ContentSkeleton Content=CurrentContent Language="Language">
					<EngBody><MyHebrewBible.Client.Features.Haggadah.DetailContent.Appendix /></EngBody>
					<EspBody><MyHebrewBible.Client.Features.Haggadah.DetailContentEsp.Appendix /></EspBody>
				</ContentSkeleton>
			}
			else
			{
				<ContentSkeleton Content=CurrentContent Language="Language">
					<EngBody>Error</EngBody>
					<EspBody>Error</EspBody>
				</ContentSkeleton>
			}
		}
		else
		{
			<div class="card border-danger mb-3 mt-5">
				<div class="card-body text-center fs-1">No Haggadah Section Found <br /> (◡︵◡)</div>
			</div>
		}
	</div>

</LoadingProgress>

@code {
	[CascadingParameter] public CascadingAppState? State { get; set; }

	protected int Section;
	protected Enums.Content? CurrentContent;
	protected Enums.DisplayLanguage? Language;

	protected override void OnInitialized()
	{
		Language = GetLanguageState();
		Section = 1;
		CurrentContent = Enums.Content.List.FirstOrDefault(w => w.Value == Section);
	}

	private Enums.DisplayLanguage GetLanguageState()
	{
		int id = State!.AppState!.HaggadahState!.Get();

		Enums.DisplayLanguage? _language;
		if (Enums.DisplayLanguage.TryFromValue(id, out _language))
		{
			return Enums.DisplayLanguage.FromValue(id);
		}
		else
		{
			return Enums.DisplayLanguage.English;
		}
	}

	private async Task ReturnedMenuItem(Enums.DisplayLanguage item)
	{
		Language = item;
		await State!.AppState!.HaggadahState!.UpdateLanguage(item);
	}

	private void ReturnedSection(int section)
	{
		Section = section;
		CurrentContent = Enums.Content.List.FirstOrDefault(w => w.Value == Section);
		// save to local storage
	}
}
