@using MyHebrewBible.Client.Layout
@using Page = MyHebrewBible.Client.Enums.Nav

@inject NavigationManager Navigation

<div class="container-fluid fixed-top bg-secondary-subtle p-2">
	<div class="row align-items-center">

		<div class="col-auto">

			<button class="btn btn-primary btn-sm" @onclick="NavigateToHome"> <i class="@Page.Home.Icon"></i> </button>

@* 
			ToDo: DOES NOT WORK, NOT VISIBLE
			<div class="collapse navbar-collapse justify-content-start">
				<div class="ps-1"><HomeDropdown OnSectionSelected="ReturnedSection" /></div>
			</div>
 *@

			@if (Section != 1)
			{
				<PreviousOrNextButton Section="Section" Forward=false OnSectionSelected="ReturnedSection" />
			}	
			else
			{
				<button class="btn btn-light btn-sm disabled ms-1"><span class="text-black-50"><i class="fas fa-ban"></i></span></button>
			}
		</div>


		<div class="col">
			<div class="progress" style="height: 20px;">
				<div class="progress-bar" style='@GetProgressStyle()'>
					@GetProgressPercent()
				</div>
			</div>
		</div>

		<div class="col-auto">

			@if (Section < Enums.Content.List.Count)
			{
				<PreviousOrNextButton Section="Section" Forward=true OnSectionSelected="ReturnedSection" />
			}
			else
			{
				<button class="btn btn-light btn-sm disabled me-1"><span class="text-black-50"><i class="fas fa-ban"></i></span></button>
			}

			<ConfigureDropdown OnMenuItemSelected="@ReturnedMenuItem" />

		</div>

		 <ToCModal OnSectionSelected="ReturnedSection"/>

	</div>
</div>

<br />

@code {
	[Parameter, EditorRequired] public int Section { get; set; }
	[Parameter, EditorRequired] public EventCallback<Enums.DisplayLanguage> OnMenuItemSelected { get; set; }
	[Parameter, EditorRequired] public EventCallback<int> OnSectionSelected { get; set; }

	protected string GetProgressStyle()
	{
		return $"width:{CalculatePercentage()}%";
	}

	protected string GetProgressPercent()
	{
		return $"{CalculatePercentage()}%";
	}

	private int CalculatePercentage ()
	{
		return (Section * 100) / Enums.Content.List.Count;
	}

	private void NavigateToHome()
	{
		Navigation.NavigateTo("/");
	}

	private void ReturnedMenuItem(Enums.DisplayLanguage item)
	{
		OnMenuItemSelected.InvokeAsync(item);
	}

	private void ReturnedSection(int section)
	{
		OnSectionSelected.InvokeAsync(section);
	}

}
