@page "/Parasha"

@using MyHebrewBible.Client.Enums
@using MyHebrewBible.Client.Features.Parasha.DetailSection
@using MyHebrewBible.Client.Features.Parasha.State

@inject ILogger<Index>? Logger
@inject IToastService? Toast

<PageHeader PageEnum="@MyHebrewBible.Client.Enums.Nav.Parasha" BorderCSS="" />


@if (CurrentReading is not null)
{
<div class="card border-primary mb-3">
	<div class="card-header">
			<h2>Current Parasha</h2>
	</div>
	
	 <div class="@MediaQuery.XsOrSm.DivClass">
		<Header CurrentReading="CurrentReading" MediaQuery="@MediaQuery.XsOrSm" />
	</div>

	<div class="@MediaQuery.MdOrLgOrXl.DivClass">
		<Header CurrentReading="CurrentReading" MediaQuery="@MediaQuery.MdOrLgOrXl" />
	</div>

	</div>
	<Verses CurrentReading="CurrentReading"
					SubTitle="@CurrentReading!.TorahPlusDaysFromOrToShabbat"
					LocalStorage="Enums.LocalStorage.Torah"
					VerseGroup="Enums.VerseGroup.Torah" />

	<Verses CurrentReading="CurrentReading"
					SubTitle="@CurrentReading!.Haftorah"
					LocalStorage="Enums.LocalStorage.Haftorah"
					VerseGroup="Enums.VerseGroup.Haftorah" />

	<Verses CurrentReading="CurrentReading"
					SubTitle="@CurrentReading!.Brit"
					LocalStorage="Enums.LocalStorage.Brit"
					VerseGroup="Enums.VerseGroup.Brit" />
}
else
{
	<p>CurrentReading IS null!</p>
}

@code {
	public Enums.Triennial? CurrentReading { get; set; }

	protected bool IsReadingCurrent;

	protected override void OnInitialized()
	{
		CurrentReading = GetCurrentReading($"{nameof(Index)}!{nameof(OnInitialized)}");
	}

	private Enums.Triennial? GetCurrentReading(string calledBy)
	{
		Enums.Triennial? _reading =
			Enums.Triennial.List
			.Where(w => w.Date == Enums.Constants.GetNextShabbatDate())
			.SingleOrDefault();

		if (_reading is null)
		{
			Logger!.LogWarning("{CalledBy}; _reading is null", calledBy);
			Toast!.ShowWarning($"Current reading is not found; called by: {calledBy}");

			//ToDo: maybe I should set it to a default e.g. Gen 1:1
			return null;
		}
		else
		{
			return _reading;
		}

	}


}
