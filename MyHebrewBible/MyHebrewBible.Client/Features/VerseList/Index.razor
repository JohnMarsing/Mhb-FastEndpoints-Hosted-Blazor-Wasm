@page "/VerseList"

@using MyHebrewBible.Client.Enums
@using MyHebrewBible.Client.Components.BibleLookup
@using MyHebrewBible.Client.Components.VerseSections
@using EnumCalledBy = MyHebrewBible.Client.Components.VerseSections.Enums.CalledBy

@inject ILogger<Index>? Logger
@* @inject IToastService? Toast *@
@* @inject IBookChapterState? bookChapterState *@

<PageHeader PageEnum="@MyHebrewBible.Client.Enums.Nav.VerseList" />

<div class="@MediaQuery.Xs.DivClass">
	<Typeahead MediaQuery="@MediaQuery.Xs"
						 OnBookAndChapterSelected="@ReturnedBookChapterVerse"  />
</div>
<div class="@MediaQuery.Sm.DivClass">
	<Typeahead MediaQuery="@MediaQuery.Sm"
						 OnBookAndChapterSelected="@ReturnedBookChapterVerse" />
</div>
<div class="@MediaQuery.Md.DivClass">
	<Typeahead MediaQuery="@MediaQuery.Md"
						 OnBookAndChapterSelected="@ReturnedBookChapterVerse" />
</div>
<div class="@MediaQuery.Lg.DivClass">
	<Typeahead MediaQuery="@MediaQuery.Lg"
						 OnBookAndChapterSelected="@ReturnedBookChapterVerse" />
</div>
<div class="@MediaQuery.Xl.DivClass">
	<Typeahead MediaQuery="@MediaQuery.Xl"
						 OnBookAndChapterSelected="@ReturnedBookChapterVerse" />
</div>


@if (CurrentVM is not null)
{
	<div class="pb-n1 mt-2 mb-2 border-bottom border-info">
		<div class="d-flex justify-content-center">

			<div class="">
				<span class="fs-3">@CurrentVM.BibleBook!.Title @CurrentVM.Chapter : @CurrentVM.Verse</span>
			</div>

			<div class="ps-1">
				<PageInstructions />
			</div>

		</div>
	</div>
}


@if (CurrentVM is not null)
{
	<Sections VM="CurrentVM" CalledBy="EnumCalledBy.VerseList" />
}


@code {

	public BookChapterVerseVM? CurrentVM { get; set; }

	protected override void OnInitialized()
	{
		//base.OnInitialized();
		Logger!.LogInformation("{Class}!{Method}", nameof(Index), nameof(OnInitialized));
	}

	private void ReturnedBookChapterVerse(BookChapterVerseVM bookChapterVerseVM)  //async Task
	{
		CurrentVM = bookChapterVerseVM!;
		//ToDo Add VerseListState logic
		//bookChapterState!.Update(new BibleBookIdAndChapter(CurrentBookAndChapter.BibleBook!.Value, CurrentBookAndChapter.Chapter));
	}

}