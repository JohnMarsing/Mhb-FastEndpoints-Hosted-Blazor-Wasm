@page "/HealthChecks/BibleBooks"

@using MyHebrewBible.Client.Components
@using Page = MyHebrewBible.Client.Enums.Nav

<PageHeader PageEnum="Page.HealthCheckBibleBook" />

@* 
<p>
	Mat 5:17 ScritpureId: @GetScriptureId(Enums.BibleBook.Matthew, 5, 17)
</p>
 *@

 <div class="card mt-4 mb-3 border-warning">
	<div class="card-body">
		<QwertyKeyboard OnKeyClick="HandleKeyClick" />
	</div>

	@if (bookStartLetter != string.Empty)
	{
		<div class="card-body">
			<h5 class="text-center">Book Start Letter: <span class="text-danger">@bookStartLetter</span></h5>

			<ul class="list-inline">
				@foreach (var item in @Enums.BibleBook.List.ToList()
																											.Where(w => w.Title.StartsWith(bookStartLetter.ToUpper()))
																											.OrderBy(o => o.Value))
				{
					<li class="list-inline-item">@item.Title</li>
				}
			</ul>
		</div>
	}

</div>

@* 
<ApiCallTest />
<BookFinalScriptureIdCodeGen />
<ChaptersAndTheirLastVerses />
<BookKeyboard />
<Table />
<HundredsAndTens />
<LastChapter />
<MaxLastVerses />
<TestColumns /> 
<LastVerseWrapper BibleBook="Enums.BibleBook.Genesis" />
*@

@code {

	protected int GetScriptureId(Enums.BibleBook bibleBook, int chapter, int verse)
	{
		int bookCount = Enums.BibleBook.List
		.Where(w => w.Value < bibleBook.Value)
		.Sum(b => b.LastVerses.Sum());
		
		int chapterCount = bibleBook.LastVerses
		.Take(chapter - 1)
		.Sum();

		return bookCount + chapterCount + verse;
	}

	protected string bookStartLetter = string.Empty;

	private void HandleKeyClick(char key)
	{
		bookStartLetter = key.ToString();	
	}
}
